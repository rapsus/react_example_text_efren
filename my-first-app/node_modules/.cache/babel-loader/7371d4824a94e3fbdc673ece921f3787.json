{"ast":null,"code":"var _jsxFileName = \"/home/q/2job/react/experiments/YT_NnpISZANByg_freeCodeCamp.org/my-first-app/src/AutoCompleteText.js\";\nimport React from 'react';\nimport './AutoCompleteText.css';\nexport default class AutoCompleteText extends React.Component {\n  constructor(props) {\n    super(props);\n    /*\n    this.items = [\n    'David',\n    'Damien',\n    'Dorothy',\n    'Donna',\n    'Sara',\n    'Samantha',\n    'Sabrina',\n    'Jane',\n    'Jayden',\n    'Joseph',\n    ];\n    this.letters = \"d, j, s\";\n    this.introText = \"start with \";\n    */\n\n    this.onTextChanged = e => {\n      const items = this.props.items; // for importing countries\n\n      const value = e.target.value;\n      let suggestions = [];\n\n      if (value.length > 0) {\n        const regex = new RegExp(\"^\".concat(value), 'i');\n        /* suggestions = this.items.sort().filter(v => regex.test(v));  // list of names */\n\n        suggestions = items.sort().filter(v => regex.test(v)); // list of countries\n      }\n\n      this.setState(() => ({\n        suggestions,\n        text: value\n      }));\n    };\n\n    this.state = {\n      suggestions: [],\n      text: ''\n    };\n  }\n\n  suggestionSelected(value) {\n    this.setState(() => ({\n      text: value,\n      suggestions: []\n    }));\n  }\n\n  renderSuggestions() {\n    const suggestions = this.state.suggestions;\n\n    if (suggestions.length === 0) {\n      return null;\n    }\n\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, suggestions.map(item => React.createElement(\"li\", {\n      onClick: () => this.suggestionSelected(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, item)));\n  }\n\n  renderItems() {\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.items.map(item => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, item)));\n  }\n\n  render() {\n    const text = this.state.text;\n    return React.createElement(\"div\", {\n      className: \"AutoCompleteText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.props.text, \" \", this.letters, \" : \", React.createElement(\"input\", {\n      value: text,\n      onChange: this.onTextChanged,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), this.renderSuggestions());\n  }\n\n}","map":{"version":3,"sources":["/home/q/2job/react/experiments/YT_NnpISZANByg_freeCodeCamp.org/my-first-app/src/AutoCompleteText.js"],"names":["React","AutoCompleteText","Component","constructor","props","onTextChanged","e","items","value","target","suggestions","length","regex","RegExp","sort","filter","v","test","setState","text","state","suggestionSelected","renderSuggestions","map","item","renderItems","render","letters"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;AAEA,eAAe,MAAMC,gBAAN,SAA+BD,KAAK,CAACE,SAArC,CAA+C;AAC9DC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AACpB,UAAMA,KAAN;AACA;;;;;;;;;;;;;;;;;AAFoB,SAyBpBC,aAzBoB,GAyBHC,CAAD,IAAO;AAAA,YACfC,KADe,GACL,KAAKH,KADA,CACfG,KADe,EACO;;AAC9B,YAAMC,KAAK,GAAGF,CAAC,CAACG,MAAF,CAASD,KAAvB;AACA,UAAIE,WAAW,GAAG,EAAlB;;AACA,UAAIF,KAAK,CAACG,MAAN,GAAe,CAAnB,EAAsB;AACtB,cAAMC,KAAK,GAAG,IAAIC,MAAJ,YAAeL,KAAf,GAAwB,GAAxB,CAAd;AACA;;AACAE,QAAAA,WAAW,GAAGH,KAAK,CAACO,IAAN,GAAaC,MAAb,CAAoBC,CAAC,IAAIJ,KAAK,CAACK,IAAN,CAAWD,CAAX,CAAzB,CAAd,CAHsB,CAGkC;AACvD;;AACD,WAAKE,QAAL,CAAc,OAAO;AAAER,QAAAA,WAAF;AAAeS,QAAAA,IAAI,EAAEX;AAArB,OAAP,CAAd;AACC,KAnCmB;;AAkBpB,SAAKY,KAAL,GAAa;AACbV,MAAAA,WAAW,EAAE,EADA;AAEbS,MAAAA,IAAI,EAAE;AAFO,KAAb;AAIC;;AAgBDE,EAAAA,kBAAkB,CAAEb,KAAF,EAAS;AAC3B,SAAKU,QAAL,CAAc,OAAO;AACrBC,MAAAA,IAAI,EAAEX,KADe;AAErBE,MAAAA,WAAW,EAAE;AAFQ,KAAP,CAAd;AAIC;;AAGDY,EAAAA,iBAAiB,GAAI;AAAA,UACbZ,WADa,GACG,KAAKU,KADR,CACbV,WADa;;AAErB,QAAIA,WAAW,CAACC,MAAZ,KAAuB,CAA3B,EAA8B;AAC9B,aAAO,IAAP;AACC;;AACD,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCD,WAAW,CAACa,GAAZ,CAAiBC,IAAD,IAAU;AAAI,MAAA,OAAO,EAAE,MAAM,KAAKH,kBAAL,CAAwBG,IAAxB,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmDA,IAAnD,CAA1B,CADD,CADA;AAKC;;AAGDC,EAAAA,WAAW,GAAI;AACf,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKlB,KAAL,CAAWgB,GAAX,CAAgBC,IAAD,IAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAL,CAAzB,CADD,CADA;AAKC;;AAEDE,EAAAA,MAAM,GAAI;AAAA,UACFP,IADE,GACO,KAAKC,KADZ,CACFD,IADE;AAEV,WACA;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKf,KAAL,CAAWe,IADZ,OACmB,KAAKQ,OADxB,SACmC;AAAO,MAAA,KAAK,EAAER,IAAd;AAAoB,MAAA,QAAQ,EAAE,KAAKd,aAAnC;AAAkD,MAAA,IAAI,EAAC,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADnC,EAEC,KAAKiB,iBAAL,EAFD,CADA;AAMC;;AA5E6D","sourcesContent":["import React from 'react';\nimport './AutoCompleteText.css';\n\nexport default class AutoCompleteText extends React.Component {\nconstructor (props) {\nsuper(props);\n/*\nthis.items = [\n'David',\n'Damien',\n'Dorothy',\n'Donna',\n'Sara',\n'Samantha',\n'Sabrina',\n'Jane',\n'Jayden',\n'Joseph',\n];\nthis.letters = \"d, j, s\";\nthis.introText = \"start with \";\n*/\nthis.state = {\nsuggestions: [],\ntext: '',\n};\n}\n\n\nonTextChanged = (e) => {\nconst { items } = this.props; // for importing countries\nconst value = e.target.value;\nlet suggestions = [];\nif (value.length > 0) {\nconst regex = new RegExp(`^${value}`, 'i');\n/* suggestions = this.items.sort().filter(v => regex.test(v));  // list of names */\nsuggestions = items.sort().filter(v => regex.test(v));  // list of countries\n}\nthis.setState(() => ({ suggestions, text: value }));\n}\n\n\nsuggestionSelected (value) {\nthis.setState(() => ({\ntext: value,\nsuggestions: [],\n}))\n}\n\n\nrenderSuggestions () {\nconst { suggestions } = this.state;\nif (suggestions.length === 0) {\nreturn null;\n}\nreturn (\n<ul>\n{suggestions.map((item) => <li onClick={() => this.suggestionSelected(item)}>{item}</li>)}\n</ul>\n);\n}\n\n\nrenderItems () {\nreturn (\n<ul>\n{this.items.map((item) => <li>{item}</li>)}\n</ul>\n);\n}\n\nrender () {\nconst { text } = this.state;\nreturn (\n<div className=\"AutoCompleteText\">\n{this.props.text} {this.letters} : <input value={text} onChange={this.onTextChanged} type=\"text\" />\n{this.renderSuggestions()}\n</div>\n);\n}\n}\n"]},"metadata":{},"sourceType":"module"}